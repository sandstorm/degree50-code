stages:
    - build
    - test
    - package
    - deploy

build_js:
    stage: build
    image: node:16.13.1-bullseye-slim
    script:
        - yarn config set cache-folder .yarn
        - cd api
        - yarn
        - yarn encore production || echo 1
    artifacts:
        expire_in: 1 week
        paths:
            - api/public/build
            - api/node_modules
    cache:
        key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG-build-js"
        paths:
            - api/node_modules
            - .yarn

test_frontend:
    stage: test
    image: node:16.13.1-bullseye-slim
    script:
        - yarn config set cache-folder .yarn
        - cd api
        - yarn lint
        - yarn test:ci

test_app:
    stage: test
    image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
    tags:
        - docker
        - privileged
    services:
        - mysql:latest
        - redis:6.2
    variables:
        MYSQL_DATABASE: "test_db"
        MYSQL_ROOT_PASSWORD: "password"
        DATABASE_URL: mysql://root:password@mysql/test_db
    script:
        - cd api
        - composer install
        - vendor/bin/phpat phpat.yaml
        - vendor/bin/behat

package_app:
    stage: package
    image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
    only:
        - tags
    tags:
        - docker
        - privileged
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        # Also make sure that ./api/VERSION is copied into the docker container (see deployment/docker/Dockerfile)
        - ./scripts/versioning.sh
        - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -f deployment/docker/Dockerfile .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG

package_logging_sidecar:
    stage: package
    image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
    only:
        - tags
    tags:
        - docker
        - privileged
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - cd deployment/loggingSidecar
        - docker build -t $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG .
        - docker push $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG

deploy-prod:
    stage: deploy
    image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
    only:
        - tags
    when: manual
    tags:
        - docker
        - privileged
        - jumphost
    script:
        # pull the image of this branch and tag it as "main"
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE:main
        - docker push $CI_REGISTRY_IMAGE:main
        - docker pull $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG
        - docker tag $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/logging-sidecar:main
        - docker push $CI_REGISTRY_IMAGE/logging-sidecar:main

        - eval $(ssh-agent -s)
        - chmod 600 $SSH_PRIVATE_DEPLOY_KEY
        - ssh-add $SSH_PRIVATE_DEPLOY_KEY
        - mkdir -p ~/.ssh
        - ssh-keyscan -H degree40.tu-dortmund.de >> ~/.ssh/known_hosts
        - scp docker-compose-prod-tu-dortmund.yml deployment@degree40.tu-dortmund.de:~/docker-compose.yml
        - ssh deployment@degree40.tu-dortmund.de "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY && docker-compose pull && docker-compose up -d"

# manual deploy to degree40-test
deploy-test:
    stage: deploy
    image: docker-hub.sandstorm.de/docker-infrastructure/php-app/build:8.1-v2
    only:
        - tags
    when: manual
    tags:
        - docker
        - privileged
        - jumphost
    script:
        # pull the image of this branch and tag it as "test-stage"
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE:test-stage
        - docker push $CI_REGISTRY_IMAGE:test-stage
        - docker pull $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG
        - docker tag $CI_REGISTRY_IMAGE/logging-sidecar:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/logging-sidecar:test-stage
        - docker push $CI_REGISTRY_IMAGE/logging-sidecar:test-stage

        - eval $(ssh-agent -s)
        - chmod 600 $SSH_PRIVATE_DEPLOY_KEY
        - ssh-add $SSH_PRIVATE_DEPLOY_KEY
        - mkdir -p ~/.ssh
        - ssh-keyscan -H degree40-test.tu-dortmund.de >> ~/.ssh/known_hosts
        - scp docker-compose-test-tu-dortmund.yml deployment@degree40-test.tu-dortmund.de:~/docker-compose.yml
        - ssh deployment@degree40-test.tu-dortmund.de "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY && docker-compose pull && docker-compose up -d"
