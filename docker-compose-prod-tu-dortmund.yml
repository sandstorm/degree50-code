##################################################
##### PRODUCTION ENVIRONMENT           ##########
##################################################

# Public ports:
#  - 80 -> API
#  - 13306 -> maria DB (used for Neos)
version: '3.4'

services:
  traefik:
    image: traefik:v2.2
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/deployment/data/traefik:/data
    command:
      # discover docker labels automatically
      - --providers.docker=true
      
      # enable both HTTP and HTTPS entrypoints
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
    
      # redirect all HTTP traffic to HTTPS
      - --entryPoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      
      # configure Let's Encrypt resolver named "letsencrypt" 
      - --certificatesResolvers.letsencrypt.acme.email=technik@sandstorm-media.de
      - --certificatesResolvers.letsencrypt.acme.storage=/data/acme.json
      - --certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web
      # comment-in the next line for using a staging let's encrypt endpoint for testing 
      #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    container_name: traefik


  api:
    image: docker-hub.sandstorm.de/degree-4.0/code:master
    labels:
      # set the host to degree40.tu-dortmund.de
      - "traefik.http.routers.degree.rule=Host(`degree40.tu-dortmund.de`)"
      # enable let's encrypt
      - "traefik.http.routers.degree.tls=true"
      - "traefik.http.routers.degree.tls.certresolver=letsencrypt"
      - traefik.http.services.degree.loadbalancer.server.port=8080
    #    healthcheck:
    #      interval: 10s
    #      timeout: 3s
    #      retries: 3
    #      start_period: 30s
    environment:
      TRUSTED_HOSTS: degree40.tu-dortmund.de
      DATABASE_URL: 'mysql://api-platform:${MYSQL_PASSWORD}@db/api'
      APP_SECRET: '${APP_SECRET}'
      LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY: '${LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY}'
      JWT_KEY: '${LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY}'
    ports:
      - 8080
    depends_on:
      - db
    volumes:
    - /home/deployment/data/app/var/data:/app/var/data
    - /home/deployment/data/app/public/data:/app/public/data

  redis:
    image: redis:6.0.1-alpine3.11
    ports:
      - 6379

  redis-ui:
    image: rediscommander/redis-commander
    environment:
      REDIS_HOSTS: 'redis:redis:6379:0'
      PORT: 8900
    ports:
      - 8900

  #####
  # DB
  db:
    image: mariadb:10.2.25
    ports:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: api
      MYSQL_USER: api-platform
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
    volumes:
      - /home/deployment/data/mysql:/var/lib/mysql:rw

