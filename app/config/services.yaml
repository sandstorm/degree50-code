# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # manually configure VIPS driver
    liip_imagine.driver_service: 'app.image_processing.vips'
    app.event_store.throw_exceptions: false
    app.live_sync.jwt_private_signing_key: '%env(resolve:LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # set locales and default locale
    bind:
        $locales: de|en
        $defaultLocale: 'de'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Mediathek\Controller\:
        resource: '../src/Mediathek/Controller'
        tags: ['controller.service_arguments']
    App\Account\Controller\:
        resource: '../src/Account/Controller'
        tags: ['controller.service_arguments']
    App\Exercise\Controller\:
        resource: '../src/Exercise/Controller'
        tags: ['controller.service_arguments']

    # manually configure VIPS driver
    app.image_processing.vips:
        class: Imagine\Vips\Imagine
    liip_imagine: '@app.image_processing.vips'

    League\Flysystem\MountManager: '@oneup_flysystem.mount_manager'

    app.mediathek.upload_listener:
        class: App\Mediathek\EventListener\UploadListener
        tags:
            - {
                name: kernel.event_listener,
                event: oneup_uploader.post_upload,
                method: onUpload,
            }

    App\Security\ParamConverter\DoctrineCustomParamConverter:
        arguments:
            $expressionLanguage: '@sensio_framework_extra.converter.doctrine.orm.expression_language'

    App\EventStore\DoctrineIntegratedEventStore:
        arguments:
            $schemaDirectory: '%kernel.project_dir%/events/'
            $throwExceptionOnFailure: '%app.event_store.throw_exceptions%'
        tags:
            - { name: 'doctrine.event_subscriber' }

    App\EventStore\Storage\Doctrine\DoctrineEventStorage:
        arguments:
            $options: { }

    App\Exercise\LiveSync\LiveSyncService:
        arguments:
            $jwtPrivateSigningKey: '%app.live_sync.jwt_private_signing_key%'

    App\Exercise\LiveSync\MercureJwtProvider:
        arguments:
            $jwtPrivateSigningKey: '%app.live_sync.jwt_private_signing_key%'

    saml_user_factory:
        class: App\Account\Saml\SamlUserFactory
