services:
  degree-setup:
    build:
      context: ./
      dockerfile: deployment/docker/Dockerfile
    entrypoint: sleep 1000000
    environment:
      LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY: changeme-setup
      LOCAL_DEVELOPMENT: 1
      APP_ENV: "dev"
      JWT_KEY: changeme-setup
    depends_on:
      - db
      - redis
      - mailpit
    volumes:
      - ./app:/app:rw,cached
      - app-var:/app/var

  degree:
    build:
      context: ./
      dockerfile: deployment/docker/Dockerfile
    ports:
      - 8080:8080
      # Port for App running with test db for e2e tests @see nginx-e2e-test-server.conf
      - 9090:9090
      # if you add a hosts entry for "degree40.tu-dortmund.de 127.0.0.1", you can test the SAML authentication locally
      - 443:443
    depends_on:
      - db
      - redis
      - mailpit
    environment:
      # TODO move in .env files
      LIVE_SYNC_JWT_PRIVATE_SIGNING_KEY: changeme-dev
      # TODO move in .env files
      JWT_KEY: changeme-dev
      LOCAL_DEVELOPMENT: 1
      # Used for CLI and for web port :8080
      # Webport :9090 (testing is using "test" instead -> see "nginx-e2e-test-server.conf")
      APP_ENV: "dev"
    volumes:
      - ./app:/app:rw,cached
      - app-var:/app/var

  redis:
    image: redis:7.2-alpine3.19
    ports:
      - 16379:6379

  redis-ui:
    image: rediscommander/redis-commander
    environment:
      REDIS_HOSTS: 'redis:redis:6379:0'
      PORT: 8900
    ports:
      - 8002:8900

  db:
    image: mariadb:10.11.7
    ports:
      - 13306:3306
    environment:
      MYSQL_ROOT_PASSWORD: '!ChangeMe!'
      MYSQL_DATABASE: degree
      MYSQL_USER: degree
      MYSQL_PASSWORD: '!ChangeMe!'
    volumes:
      - db-data:/var/lib/mysql:rw
      - ./deployment/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    # use Unicode encoding as default!
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']

  #####
  # Mailpit (local smtp)
  mailpit:
    image: axllent/mailpit:v1.15
    hostname: mailpit
    ports:
      - '8025:8025'

volumes:
  app-var: {}
  db-data: {}
